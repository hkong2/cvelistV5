{
    "dataType": "CVE_RECORD",
    "dataVersion": "5.1",
    "cveMetadata": {
        "cveId": "CVE-2024-6763",
        "assignerOrgId": "e51fbebd-6053-4e49-959f-1b94eeb69a2c",
        "state": "PUBLISHED",
        "assignerShortName": "eclipse",
        "dateReserved": "2024-07-15T17:37:53.605Z",
        "datePublished": "2024-10-14T15:06:07.298Z",
        "dateUpdated": "2024-10-14T15:08:49.398Z"
    },
    "containers": {
        "cna": {
            "affected": [
                {
                    "collectionURL": "https://repo.maven.apache.org/maven2/",
                    "defaultStatus": "unaffected",
                    "modules": [
                        "jetty-http"
                    ],
                    "packageName": "org.eclipse.jetty:jetty-http",
                    "product": "Jetty",
                    "repo": "https://github.com/jetty/jetty.project",
                    "vendor": "Eclipse Foundation",
                    "versions": [
                        {
                            "lessThanOrEqual": "12.0.11",
                            "status": "affected",
                            "version": "7.0.0",
                            "versionType": "semver"
                        }
                    ]
                }
            ],
            "credits": [
                {
                    "lang": "en",
                    "type": "finder",
                    "value": "https://github.com/zer0yu"
                }
            ],
            "datePublic": "2024-10-14T15:00:00.000Z",
            "descriptions": [
                {
                    "lang": "en",
                    "supportingMedia": [
                        {
                            "base64": false,
                            "type": "text/html",
                            "value": "<p></p><h2>Summary</h2>\n<p>Eclipse Jetty is a lightweight, highly scalable, Java-based web server and Servlet engine . It includes a utility class, <code>HttpURI</code>, for URI/URL parsing.</p>\n<p>The <code>HttpURI</code> class does insufficient validation on the authority segment of a URI.  However the behaviour of <code>HttpURI</code>\n differs from the common browsers in how it handles a URI that would be \nconsidered invalid if fully validated against the RRC.  Specifically <code>HttpURI</code>\n and the browser may differ on the value of the host extracted from an \ninvalid URI and thus a combination of Jetty and a vulnerable browser may\n be vulnerable to a open redirect attack or to a SSRF attack if the URI \nis used after passing validation checks.</p>\n<h2>Details</h2>\n<h3>Affected components</h3>\n<p>The vulnerable component is the <code>HttpURI</code> class when used as a utility class in an application.  The Jetty usage of the class is not vulnerable.</p>\n<h3>Attack overview</h3>\n<p>The <code>HttpURI</code> class does \nnot well validate the authority section of a URI. When presented with an\n illegal authority that may contain user info (eg username:password#<a target=\"_blank\" rel=\"nofollow\" href=\"https://github.com/hostname\">@hostname</a>:port),\n then the parsing of the URI is not failed.  Moreover, the \ninterpretation of what part of the authority is the host name differs \nfrom a common browser in  that they also do not fail, but they select a \ndifferent host name from the illegal URI.</p>\n<h3>Attack scenario</h3>\n<p>A typical attack scenario is illustrated in the diagram \nbelow. The Validator checks whether the attacker-supplied URL is on the \nblocklist. If not, the URI is passed to the Requester for redirection. \nThe Requester is responsible for sending requests to the hostname \nspecified by the URI.</p>\n<p>This attack occurs when the Validator is the <code>org.eclipse.jetty.http.HttpURI</code> class and the Requester is the <code>Browser</code> (include chrome, firefox and Safari). An attacker can send a malformed URI to the Validator (e.g., <code>http://browser.check%23%40vulndetector.com/</code>\n ). After validation, the Validator finds that the hostname is not on \nthe blocklist. However, the Requester can still send requests to the \ndomain with the hostname <code>vulndetector.com</code>.</p><p></p><h2>Impact</h2>\n<p>The impact of this vulnerability is limited to developers \nthat use the Jetty HttpURI directly.  Example: your project implemented a\n blocklist to block on some hosts based on HttpURI's handling of \nauthority section.  The vulnerability will help attackers bypass the \nprotections that developers have set up for hosts. The vulnerability \nwill lead to <strong>SSRF</strong>[1] and <strong>URL Redirection</strong>[2] vulnerabilities in several cases.</p><p></p>"
                        }
                    ],
                    "value": "Summary\nEclipse Jetty is a lightweight, highly scalable, Java-based web server and Servlet engine . It includes a utility class, HttpURI, for URI/URL parsing.\n\n\nThe HttpURI class does insufficient validation on the authority segment of a URI.  However the behaviour of HttpURI\n differs from the common browsers in how it handles a URI that would be \nconsidered invalid if fully validated against the RRC.  Specifically HttpURI\n and the browser may differ on the value of the host extracted from an \ninvalid URI and thus a combination of Jetty and a vulnerable browser may\n be vulnerable to a open redirect attack or to a SSRF attack if the URI \nis used after passing validation checks.\n\n\nDetails\nAffected components\nThe vulnerable component is the HttpURI class when used as a utility class in an application.  The Jetty usage of the class is not vulnerable.\n\n\nAttack overview\nThe HttpURI class does \nnot well validate the authority section of a URI. When presented with an\n illegal authority that may contain user info (eg username:password# @hostname https://github.com/hostname :port),\n then the parsing of the URI is not failed.  Moreover, the \ninterpretation of what part of the authority is the host name differs \nfrom a common browser in  that they also do not fail, but they select a \ndifferent host name from the illegal URI.\n\n\nAttack scenario\nA typical attack scenario is illustrated in the diagram \nbelow. The Validator checks whether the attacker-supplied URL is on the \nblocklist. If not, the URI is passed to the Requester for redirection. \nThe Requester is responsible for sending requests to the hostname \nspecified by the URI.\n\n\nThis attack occurs when the Validator is the org.eclipse.jetty.http.HttpURI class and the Requester is the Browser (include chrome, firefox and Safari). An attacker can send a malformed URI to the Validator (e.g., http://browser.check%23%40vulndetector.com/\n ). After validation, the Validator finds that the hostname is not on \nthe blocklist. However, the Requester can still send requests to the \ndomain with the hostname vulndetector.com.\n\n\n\nImpact\nThe impact of this vulnerability is limited to developers \nthat use the Jetty HttpURI directly.  Example: your project implemented a\n blocklist to block on some hosts based on HttpURI's handling of \nauthority section.  The vulnerability will help attackers bypass the \nprotections that developers have set up for hosts. The vulnerability \nwill lead to SSRF[1] and URL Redirection[2] vulnerabilities in several cases."
                }
            ],
            "metrics": [
                {
                    "cvssV3_1": {
                        "attackComplexity": "HIGH",
                        "attackVector": "NETWORK",
                        "availabilityImpact": "NONE",
                        "baseScore": 3.7,
                        "baseSeverity": "LOW",
                        "confidentialityImpact": "NONE",
                        "integrityImpact": "LOW",
                        "privilegesRequired": "NONE",
                        "scope": "UNCHANGED",
                        "userInteraction": "NONE",
                        "vectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:L/A:N",
                        "version": "3.1"
                    },
                    "format": "CVSS",
                    "scenarios": [
                        {
                            "lang": "en",
                            "value": "GENERAL"
                        }
                    ]
                }
            ],
            "problemTypes": [
                {
                    "descriptions": [
                        {
                            "cweId": "CWE-1286",
                            "description": "CWE-1286",
                            "lang": "en",
                            "type": "CWE"
                        }
                    ]
                }
            ],
            "providerMetadata": {
                "orgId": "e51fbebd-6053-4e49-959f-1b94eeb69a2c",
                "shortName": "eclipse",
                "dateUpdated": "2024-10-14T15:08:49.398Z"
            },
            "references": [
                {
                    "url": "https://github.com/jetty/jetty.project/security/advisories/GHSA-qh8g-58pp-2wxh"
                },
                {
                    "url": "https://gitlab.eclipse.org/security/cve-assignement/-/issues/25"
                },
                {
                    "url": "https://github.com/jetty/jetty.project/pull/12012"
                }
            ],
            "source": {
                "discovery": "UNKNOWN"
            },
            "title": "Jetty URI parsing of invalid authority",
            "workarounds": [
                {
                    "lang": "en",
                    "supportingMedia": [
                        {
                            "base64": false,
                            "type": "text/html",
                            "value": "<p>The attacks outlined above rely on decoded user data being passed to the <code>HttpURI</code> class. Application should not pass decoded user data as an encoded URI to any URI class/method, including <code>HttpURI</code>.  Such applications are likely to be vulnerable in other ways.<br>\nThe immediate solution is to upgrade to a version of the class that will\n fully validate the characters of the URI authority.  Ultimately, Jetty \nwill deprecate and remove support for user info in the authority per <a target=\"_blank\" rel=\"nofollow\" href=\"https://datatracker.ietf.org/doc/html/rfc9110#section-4.2.4\">RFC9110 Section 4.2.4</a>.</p>\n<p>Note that the Chrome (and other browsers) parse the \ninvalid user info section improperly as well (due to flawed WhatWG URL \nparsing rules that do not apply outside of a Web Browser).</p>"
                        }
                    ],
                    "value": "The attacks outlined above rely on decoded user data being passed to the HttpURI class. Application should not pass decoded user data as an encoded URI to any URI class/method, including HttpURI.  Such applications are likely to be vulnerable in other ways.\n\nThe immediate solution is to upgrade to a version of the class that will\n fully validate the characters of the URI authority.  Ultimately, Jetty \nwill deprecate and remove support for user info in the authority per  RFC9110 Section 4.2.4 https://datatracker.ietf.org/doc/html/rfc9110#section-4.2.4 .\n\n\nNote that the Chrome (and other browsers) parse the \ninvalid user info section improperly as well (due to flawed WhatWG URL \nparsing rules that do not apply outside of a Web Browser)."
                }
            ],
            "x_generator": {
                "engine": "Vulnogram 0.2.0"
            }
        }
    }
}