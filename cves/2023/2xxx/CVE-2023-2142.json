{
    "dataType": "CVE_RECORD",
    "dataVersion": "5.1",
    "cveMetadata": {
        "cveId": "CVE-2023-2142",
        "assignerOrgId": "f16b083a-5664-49f3-a51e-8d479e5ed7fe",
        "state": "PUBLISHED",
        "assignerShortName": "mozilla",
        "dateReserved": "2023-04-18T08:19:20.097Z",
        "datePublished": "2024-11-26T11:24:15.422Z",
        "dateUpdated": "2024-11-26T11:24:15.422Z"
    },
    "containers": {
        "cna": {
            "affected": [
                {
                    "defaultStatus": "unknown",
                    "product": "Nunjucks",
                    "vendor": "Mozilla",
                    "versions": [
                        {
                            "lessThan": "3.2.4",
                            "status": "affected",
                            "version": "0",
                            "versionType": "semver"
                        }
                    ]
                }
            ],
            "credits": [
                {
                    "lang": "en",
                    "type": "finder",
                    "value": "blaiddx64"
                }
            ],
            "descriptions": [
                {
                    "lang": "en",
                    "supportingMedia": [
                        {
                            "base64": false,
                            "type": "text/html",
                            "value": "<p>In Nunjucks versions prior to version 3.2.4, it was \npossible to bypass the restrictions which are provided by the autoescape\n functionality. If there are two user-controlled parameters on the same \nline used in the views, it was possible to inject cross site scripting \npayloads using the backslash <code>\\</code> character.</p>"
                        }
                    ],
                    "value": "In Nunjucks versions prior to version 3.2.4, it was \npossible to bypass the restrictions which are provided by the autoescape\n functionality. If there are two user-controlled parameters on the same \nline used in the views, it was possible to inject cross site scripting \npayloads using the backslash \\ character."
                }
            ],
            "impacts": [
                {
                    "capecId": "CAPEC-63",
                    "descriptions": [
                        {
                            "lang": "en",
                            "value": "CAPEC-63 Cross-Site Scripting (XSS)"
                        }
                    ]
                }
            ],
            "problemTypes": [
                {
                    "descriptions": [
                        {
                            "cweId": "CWE-79",
                            "description": "CWE-79 Improper Neutralization of Input During Web Page Generation (XSS or 'Cross-site Scripting')",
                            "lang": "en",
                            "type": "CWE"
                        }
                    ]
                }
            ],
            "providerMetadata": {
                "orgId": "f16b083a-5664-49f3-a51e-8d479e5ed7fe",
                "shortName": "mozilla",
                "dateUpdated": "2024-11-26T11:24:15.422Z"
            },
            "references": [
                {
                    "tags": [
                        "issue-tracking"
                    ],
                    "url": "https://bugzilla.mozilla.org/show_bug.cgi?id=1825980"
                },
                {
                    "tags": [
                        "vendor-advisory"
                    ],
                    "url": "https://github.com/mozilla/nunjucks/security/advisories/GHSA-x77j-w7wf-fjmw"
                }
            ],
            "source": {
                "discovery": "UNKNOWN"
            },
            "title": "Nunjucks autoescape bypass leads to cross site scripting",
            "x_generator": {
                "engine": "Vulnogram 0.2.0"
            }
        }
    }
}