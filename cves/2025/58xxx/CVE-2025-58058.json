{
    "dataType": "CVE_RECORD",
    "dataVersion": "5.1",
    "cveMetadata": {
        "cveId": "CVE-2025-58058",
        "assignerOrgId": "a0819718-46f1-4df5-94e2-005712e83aaa",
        "state": "PUBLISHED",
        "assignerShortName": "GitHub_M",
        "dateReserved": "2025-08-22T14:30:32.221Z",
        "datePublished": "2025-08-28T21:54:05.561Z",
        "dateUpdated": "2025-08-28T21:54:05.561Z"
    },
    "containers": {
        "cna": {
            "title": "github.com/ulikunitz/xz leaks memory when decoding a corrupted multiple LZMA archives",
            "problemTypes": [
                {
                    "descriptions": [
                        {
                            "cweId": "CWE-770",
                            "lang": "en",
                            "description": "CWE-770: Allocation of Resources Without Limits or Throttling",
                            "type": "CWE"
                        }
                    ]
                }
            ],
            "metrics": [
                {
                    "cvssV3_1": {
                        "attackComplexity": "LOW",
                        "attackVector": "NETWORK",
                        "availabilityImpact": "LOW",
                        "baseScore": 5.3,
                        "baseSeverity": "MEDIUM",
                        "confidentialityImpact": "NONE",
                        "integrityImpact": "NONE",
                        "privilegesRequired": "NONE",
                        "scope": "UNCHANGED",
                        "userInteraction": "NONE",
                        "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
                        "version": "3.1"
                    }
                }
            ],
            "references": [
                {
                    "name": "https://github.com/ulikunitz/xz/security/advisories/GHSA-jc7w-c686-c4v9",
                    "tags": [
                        "x_refsource_CONFIRM"
                    ],
                    "url": "https://github.com/ulikunitz/xz/security/advisories/GHSA-jc7w-c686-c4v9"
                },
                {
                    "name": "https://github.com/ulikunitz/xz/commit/88ddf1d0d98d688db65de034f48960b2760d2ae2",
                    "tags": [
                        "x_refsource_MISC"
                    ],
                    "url": "https://github.com/ulikunitz/xz/commit/88ddf1d0d98d688db65de034f48960b2760d2ae2"
                }
            ],
            "affected": [
                {
                    "vendor": "ulikunitz",
                    "product": "xz",
                    "versions": [
                        {
                            "version": "< 0.5.14",
                            "status": "affected"
                        }
                    ]
                }
            ],
            "providerMetadata": {
                "orgId": "a0819718-46f1-4df5-94e2-005712e83aaa",
                "shortName": "GitHub_M",
                "dateUpdated": "2025-08-28T21:54:05.561Z"
            },
            "descriptions": [
                {
                    "lang": "en",
                    "value": "xz is a pure golang package for reading and writing xz-compressed files. Prior to version 0.5.14, it is possible to put data in front of an LZMA-encoded byte stream without detecting the situation while reading the header. This can lead to increased memory consumption because the current implementation allocates the full decoding buffer directly after reading the header. The LZMA header doesn't include a magic number or has a checksum to detect such an issue according to the specification. Note that the code recognizes the issue later while reading the stream, but at this time the memory allocation has already been done. This issue has been patched in version 0.5.14."
                }
            ],
            "source": {
                "advisory": "GHSA-jc7w-c686-c4v9",
                "discovery": "UNKNOWN"
            }
        }
    }
}